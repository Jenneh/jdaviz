[metadata]
name = jdaviz
author = JDADF Developers
author_email = nearl@stsci.edu
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://github.com/spacetelescope/jdaviz
description = Astronomical data analysis development leveraging Jupyter platform
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = True
github_project = spacetelescope/jdaviz

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    astropy
    glue-jupyter
    ipyvue @ git+https://github.com/mariobuikhuizen/ipyvue.git@betterInstanceEmbedding#egg=ipyvue
    ipyvuetify @ git+https://github.com/mariobuikhuizen/ipyvuetify.git
    ipyvuedraggable @ git+https://github.com/mariobuikhuizen/ipyvuedraggable.git#egg=ipyvuedraggable
    ipysplitpanes @ git+https://github.com/nmearl/ipysplitpanes.git#egg=ipysplitpanes
    voila
    pyyaml


[options.extras_require]
test =
    pytest-astropy
docs =
    sphinx-astropy

[options.package_data]
jdaviz = data/*

[options.entry_points]
console_scripts =
plugins =
    default = jdaviz.configs.default
    cubeviz = jdaviz.configs.cubeviz

[tool:pytest]
testpaths = "jdaviz" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    jdaviz/_astropy_init*
    jdaviz/conftest.py
    jdaviz/*setup_package*
    jdaviz/tests/*
    jdaviz/*/tests/*
    jdaviz/extern/*
    jdaviz/version*
    */jdaviz/_astropy_init*
    */jdaviz/conftest.py
    */jdaviz/*setup_package*
    */jdaviz/tests/*
    */jdaviz/*/tests/*
    */jdaviz/extern/*
    */jdaviz/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
